plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'org.openapi.generator' version '4.2.3'
    id "org.sonarqube" version "2.7"
    id 'jacoco'
    id "org.owasp.dependencycheck" version "5.3.2.1"

}

checkstyle {
    toolVersion = '8.31'
}

sonarqube {
    properties {
        property "sonar.projectKey", getProjectProperty('sonarprojectkey')
        property "sonar.host.url", getProjectProperty('sonarhosturl')
        property "sonar.login", getProjectProperty('sonarlogin')
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled false
    }
}
test.finalizedBy jacocoTestReport


group = 'com.thoughtworks'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/cd-jump-start/BankClient")
        credentials {
            username = getProjectProperty('gdusername')
            password = getProjectProperty('gdtoken')
        }
    }
    maven {
        url = uri("https://maven.pkg.github.com/cd-jump-start/FraudClient")
        credentials {
            username = getProjectProperty('gdusername')
            password = getProjectProperty('gdtoken')
        }
    }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

String getProjectProperty(String propertyName) {
    String propertyValue = "null"
    if (hasProperty(propertyName)) {
        propertyValue = this.properties[propertyName]
    }
    return propertyValue
}

bootRun {
    bootRun.systemProperty 'spring.profiles.active', "${springProfile}"
}

test {
    systemProperty 'spring.profiles.active', 'test'
    useJUnitPlatform()
}

ext {
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '2.25.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.10'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.3'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    compile 'org.apache.directory.studio:org.apache.commons.io:2.4'
    compile group: 'io.github.resilience4j', name: 'resilience4j-spring-boot2', version: '1.3.1'
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'io.micrometer:micrometer-registry-prometheus'
    compile 'ch.qos.logback.contrib:logback-json-classic:0.1.5'
    compile 'ch.qos.logback.contrib:logback-jackson:0.1.5'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.3'
    compile 'org.flywaydb:flyway-core:5.2.3'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    runtimeOnly 'org.postgresql:postgresql:42.2.5'
    compile 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // compile 'org.springdoc:springdoc-openapi-core:1.1.49'
    // compile 'org.springdoc:springdoc-openapi-core:1.2.19'
    // compile group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.1.49'
    compile 'com.thoughtworks:BankServiceClient:1.1-SNAPSHOT'
    compile 'com.thoughtworks:FraudServiceClient:1.1-SNAPSHOT'
    //compile group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.1'
    //compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
//    classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1")
}

openApiGenerate {
    generatorName = "spring"
    library = "spring-boot"
    inputSpec = "$rootDir/src/main/resources/static/paymentapi.json".toString()
    outputDir = "$rootDir".toString()
    apiPackage = "com.thoughtworks.api.api"
    modelPackage = "com.thoughtworks.api.api.model"
    modelFilesConstrainedTo = []
    configOptions = [
            unhandledException     : "true",
            title                  : "Payment",
            dateLibrary            : "java8",
            interfaceOnly          : "true",
            java8                  : "true",
            hideGenerationTimestamp: "true",
            returnSuccessCode      : "true",
            swaggerDocketConfig    : "false",
            //			skipDefaultInterface   : "true",
            configPackage          : "com.thoughtworks.api.api.configuration",
    ]
}
